{"version":3,"sources":["WeatherDataComponent.js","App.js","index.js"],"names":["WeatherDataComponent","nextProps","nextState","temp","this","props","city","console","log","feelsLike","src","icon","alt","humidity","pressure","maxTemp","minTemp","Component","App","state","cityName","weatherData","getUserCity","e","setState","target","value","formSubmission","preventDefault","trim","fetchWeatherData","fetch","process","then","response","json","data","catch","err","onSubmit","type","placeholder","onChange","main","temp_max","temp_min","feels_like","weather","reactDOM","render","document","getElementById"],"mappings":"4JAEqBA,E,2KAEjB,SAAsBC,EAAWC,GAC7B,OAAGD,EAAUE,OAAOC,KAAKC,MAAMF,MAAQF,EAAUK,OAAOF,KAAKC,MAAMC,O,oBAKvE,WAEI,OADAC,QAAQC,IAAI,gCAER,gCACI,mDAAsBJ,KAAKC,MAAMI,aACjC,uCAAUL,KAAKC,MAAMC,QACrB,qBAAKI,IAAG,2CAAsCN,KAAKC,MAAMM,KAAjD,WAAgEC,IAAI,KAC5E,8BACG,8CAAiBR,KAAKC,MAAMF,UAE/B,gCACI,0CAAaC,KAAKC,MAAMQ,YACxB,0CAAaT,KAAKC,MAAMS,YACxB,0CAAaV,KAAKC,MAAMU,WACxB,0CAAaX,KAAKC,MAAMW,qB,GAtBMC,aCI7BC,E,4MAEnBC,MAAM,CACJC,SAAS,GACTC,YAAY,M,EAGdC,YAAY,SAACC,GACX,EAAKC,SAAS,CACZJ,SAAUG,EAAEE,OAAOC,S,EAIvBC,eAAe,SAACJ,GAEdA,EAAEK,iBACFrB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,EAAKW,MAAMC,UACU,KAA9B,EAAKD,MAAMC,SAASS,QACrB,EAAKC,iBAAiB,EAAKX,MAAMC,W,EAKrCU,iBAAiB,SAACxB,GAEhByB,MAAM,qDAAD,OAAsDzB,EAAtD,wBACI0B,mCADJ,kBAEJC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAE,EAAKZ,SAAS,CAACH,YAAYe,OACtCC,OAAM,SAAAC,GAAG,OAAE/B,QAAQC,IAAI8B,O,uDAG1B,WAEElC,KAAK0B,iBAAiB,Y,oBAGxB,WAEEvB,QAAQC,IAAIwB,oCACZ,IAAII,EAAKhC,KAAKe,MAAME,YAEpB,OACE,gCACE,6CACA,uBAAMkB,SAAUnC,KAAKuB,eAArB,UACE,uBAAOa,KAAK,OAAOC,YAAY,uBAAuBC,SAAUtC,KAAKkB,cACrE,yDAEDc,GACA,cAAC,EAAD,CACD9B,KAAMF,KAAKe,MAAMC,SACjBjB,KAAMiC,EAAKO,KAAKxC,KAChBY,QAASqB,EAAKO,KAAKC,SACnB5B,QAASoB,EAAKO,KAAKE,SACnBhC,SAAUuB,EAAKO,KAAK9B,SACpBJ,UAAW2B,EAAKO,KAAKG,WACrBnC,KAAMyB,EAAKW,QAAQ,GAAGpC,c,GA1DGM,a,cCDjC+B,EAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.46b34562.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class WeatherDataComponent extends Component {\n\n    shouldComponentUpdate(nextProps, nextState){\n        if(nextProps.temp===this.props.temp && nextProps.city===this.props.city){\n            return false\n        }\n        return true\n    }\n    render() {\n        console.log(\"render from weatherComponent\");\n        return (\n            <div>\n                <p>Feels like .......{this.props.feelsLike}</p>\n                <p>City: {this.props.city}</p>\n                <img src={`http://openweathermap.org/img/wn/${this.props.icon}@4x.png`} alt=\"\"/>\n                <div>\n                   <h1>Temperature:{this.props.temp}</h1>\n                </div>\n                <div>\n                    <p>Humidity:{this.props.humidity}</p>\n                    <p>Pressure:{this.props.pressure}</p>\n                    <p>Max.Temp:{this.props.maxTemp}</p>\n                    <p>Min.Temp:{this.props.minTemp}</p>\n                </div>\n            </div>\n        )\n    }\n}\n","\nimport React, { Component } from 'react'\nimport WeatherDataComponent from './WeatherDataComponent'\n\n\n\nexport default class App extends Component {\n\n  state={\n    cityName:\"\",\n    weatherData:null\n  }\n\n  getUserCity=(e)=>{\n    this.setState({\n      cityName: e.target.value\n    })\n  }\n\n  formSubmission=(e)=>{\n    // to prevent default behaviour of form that is to refresh the page.\n    e.preventDefault()\n    console.log(\"form Submitted\");\n    console.log(this.state.cityName);\n    if(this.state.cityName.trim() !==\"\"){\n      this.fetchWeatherData(this.state.cityName);\n    }\n    \n  }\n\n  fetchWeatherData=(city)=>{\n    // fethching weather information from this openweathermap api\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}\n    &appid=${process.env.REACT_APP_API_KEY}&units=metric`)\n    .then(response=>response.json())\n    .then(data=>this.setState({weatherData:data}))\n    .catch(err=>console.log(err))\n  };\n\n  componentDidMount(){\n    //onload\n    this.fetchWeatherData(\"Berlin\")\n  }\n\n  render() {\n    //console.log(this.state.weatherData);\n    console.log(process.env.REACT_APP_API_KEY)\n    let data=this.state.weatherData\n    \n    return (\n      <div>\n        <h1>Weather APP</h1>\n        <form onSubmit={this.formSubmission}>\n          <input type=\"text\" placeholder=\"Enter Your City Name\" onChange={this.getUserCity}/>\n          <button>Get Weather Data</button>\n        </form>\n        {data && \n         <WeatherDataComponent \n        city={this.state.cityName}\n        temp={data.main.temp}\n        maxTemp={data.main.temp_max}\n        minTemp={data.main.temp_min}\n        humidity={data.main.humidity}\n        feelsLike={data.main.feels_like}\n        icon={data.weather[0].icon}\n        /> }\n      </div>\n    )\n  }\n}\n","\nimport React from \"react\"\nimport App from \"./App.js\"\nimport reactDOM from \"react-dom\"\n\nreactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}